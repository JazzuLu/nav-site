user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
 worker_connections  1024;
}
http {
 #文件扩展名与文件类型映射表
 include       /etc/nginx/mime.types;
 #默认文件类型
 default_type  application/octet-stream;
 #日志格式设定
         #$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；
         #$remote_user：用来记录客户端用户名称；
         #$time_local： 用来记录访问时间与时区；
         #$request： 用来记录请求的url与http协议；
         #$status： 用来记录请求状态；成功是200，
         #$body_bytes_sent ：记录发送给客户端文件主体内容大小；
         #$http_referer：用来记录从那个页面链接访问过来的；
         #$http_user_agent：记录客户浏览器的相关信息；
         #通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_add拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。
 log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
 #定义本虚拟主机的访问日志
 access_log  /var/log/nginx/access.log  main;
 #开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。
 #sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。
 sendfile        on;
 #长连接超时时间，单位是秒
 keepalive_timeout  65;
 #虚拟主机的配置
 server {
   #监听端口
   listen       3000;
#    listen       443 ssl;  #侦听443端口，用于SSL
   #域名可以有多个，用空格隔开
   server_name  nav.pancrasxox.xyz;
   #对 "/" 启用反向代理
   location / {
#      root   /var/www/dockerize-nuxt/nuxt-app;
#      index  index.html;
#      try_files $uri $uri/ /index.html;
     proxy_pass     http://172.17.0.1:3000;   # 实现 3001 端口映射到80端口, 使用二级域名 nav
   }
   error_page   500 502 503 504  /50x.html;
   location = /50x.html {
     root   /usr/share/nginx/html;
   }
 }
}
